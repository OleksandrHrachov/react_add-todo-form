{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo.tsx","components/TodoInfo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","className","TodoInfo","TodoList","todosForTodoList","map","todo","user","App","state","todosList","selectedUser","titleIsValid","userIsSelected","this","todosForRender","todoApp","find","userFromServer","action","onSubmit","event","preventDefault","titleForNewTodo","selectedUserFromServer","undefined","setState","length","htmlFor","type","placeholder","value","onChange","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a1a71cd.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  email: string;\n};\n\nexport const UserInfo: React.FC<Props> = ({ name, email }) => (\n  <>\n    <h3 className=\"name\">{`Name: ${name}`}</h3>\n    <span className=\"email\">{`e-mail: ${email}`}</span>\n  </>\n);\n","import React from 'react';\n\ntype Props = {\n  title: string;\n  completed: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, completed }) => (\n  <>\n    <span className=\"todo-title\">{`todo: ${title} - `}</span>\n    <span className=\"todo-status\">{completed ? 'completed' : 'no completed'}</span>\n  </>\n);\n","import React from 'react';\nimport './TodoList.scss';\n\nimport { Todo } from '../interface/Todo';\nimport { UserInfo } from './UserInfo';\nimport { TodoInfo } from './TodoInfo';\n\ntype Props = {\n  todosForTodoList: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todosForTodoList }) => (\n  <>\n    {todosForTodoList.map((todo) => (\n      <div\n        className=\"user\"\n        key={todo.id}\n      >\n        {todo.user && (\n          <div className=\"user-info\">\n            <UserInfo\n              name={todo.user.name}\n              email={todo.user.email}\n            />\n          </div>\n        )}\n        <br />\n        <div className=\"todo-info\">\n          <TodoInfo\n            title={todo.title}\n            completed={todo.completed}\n          />\n        </div>\n      </div>\n    ))}\n  </>\n);\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport { State } from './types/StateForApp';\nimport { TodoList } from './components/TodoList';\n\nclass App extends React.Component<{}, State> {\n  state = {\n    todosList: [...todos],\n    title: '',\n    selectedUser: '',\n    todo: '',\n    titleIsValid: true,\n    userIsSelected: true,\n  };\n\n  render() {\n    const {\n      todosList, title, selectedUser, titleIsValid, userIsSelected,\n    } = this.state;\n\n    const todosForRender = todosList.map((todoApp) => ({\n      ...todoApp,\n      user: users.find(userFromServer => userFromServer.id === todoApp.userId) || null,\n    }));\n\n    return (\n      <>\n        <form\n          action=\"#\"\n          className=\"form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            const titleForNewTodo = title;\n            const selectedUserFromServer\n              = users.find(user => user.name === selectedUser);\n\n            if (selectedUserFromServer === undefined) {\n              this.setState({ userIsSelected: false });\n            }\n\n            if (!titleForNewTodo) {\n              this.setState({ titleIsValid: false });\n            }\n\n            if (selectedUserFromServer !== undefined\n              && titleForNewTodo\n              && titleForNewTodo.length <= 20) {\n              this.setState((state) => ({\n                todosList: [...state.todosList, {\n                  userId: selectedUserFromServer.id,\n                  id: todosList.length + 1,\n                  title: titleForNewTodo,\n                  completed: false,\n                }],\n                title: '',\n                selectedUser: '',\n                todo: 'To do something',\n              }));\n            }\n          }}\n        >\n          <fieldset className=\"form-fieldset\">\n\n            <legend className=\"form-legend\">Create a new todo</legend>\n\n            <label htmlFor=\"title\">\n              Enter the title of the TODO:\n              {' '}\n              <br />\n              <input\n                className=\"form-title\"\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                placeholder=\"Title\"\n                value={this.state.title}\n                onChange={(event) => {\n                  this.setState({ title: event.target.value });\n                  if (!event.target.value) {\n                    this.setState({ titleIsValid: false });\n                  } else {\n                    this.setState({ titleIsValid: true });\n                  }\n                }}\n              />\n            </label>\n            {titleIsValid ? '' : <span className=\"error-message\">Please enter the title</span>}\n            {title.length <= 20 ? '' : <span className=\"error-message\">Max length 20 characters</span>}\n            <br />\n\n            <label htmlFor=\"user\">\n              Choose for whom the TODO will be created:\n              {' '}\n              <br />\n              <select\n                className=\"form-select\"\n                name=\"selectedUser\"\n                id=\"user\"\n                value={this.state.selectedUser}\n                onChange={(event) => {\n                  this.setState({ selectedUser: event.target.value });\n                  if (!event.target.value) {\n                    this.setState({ userIsSelected: false });\n                  } else {\n                    this.setState({ userIsSelected: true });\n                  }\n                }}\n              >\n                <option value=\"\">Choose a user</option>\n                {users.map(userFromServer => (\n                  <option\n                    key={userFromServer.id}\n                    value={userFromServer.name}\n                  >\n                    {userFromServer.name}\n                  </option>\n                ))}\n              </select>\n            </label>\n            {userIsSelected ? '' : <span className=\"error-message\">Please choose a user</span>}\n            <br />\n\n            <label htmlFor=\"todo\">\n              Enter TODO:\n              {' '}\n              <br />\n              <textarea\n                className=\"form-textarea\"\n                name=\"todo\"\n                id=\"todo\"\n                placeholder=\"To do something\"\n                value={this.state.todo}\n                onChange={(event) => {\n                  this.setState({ todo: event.target.value });\n                }}\n              />\n            </label>\n            <br />\n\n            <button type=\"submit\">Add</button>\n\n          </fieldset>\n        </form>\n        <TodoList todosForTodoList={todosForRender} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}